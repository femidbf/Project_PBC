pipeline {
  agent any
  tools {
    maven 'maven'
  }
  stages {
    stage('Pull Source Code from GitHub') {
      steps {
        git branch: 'main',
          credentialsId: 'git',
          url: 'https://github.com/CloudHight/Set_6_Pet_Adoption_Application_Team_2.git'
      }
    }
    stage('Code Analysis') {
      steps {
        withSonarQubeEnv('sonar') {
          sh "mvn sonar:sonar"
        }
      }
    }
    stage('Build Code') {
      steps {
        sh 'mvn package -Dmaven.test.skip'
      }
    }
    stage('Send Artifacts') {
      steps {
        sshagent(['jenkins']) {
          sh 'scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/petadoption/target/spring-petclinic-2.4.2.war  ubuntu@35.177.69.247:/opt/docker'
        }
      }

    }
    stage('Deploy to docker-stage') {
      steps {
        sshagent(['jenkins']) {
          sh 'ssh -o StrictHostKeyChecking=no ubuntu@35.177.69.247 "ansible-playbook docker_image.yml && ansible-playbook docker_stage.yml" ' 
        }
      }

    }
    stage('Needs approval to deploy to docker-prod'){
      steps {
         timeout(activity: true, time: 5, unit: 'DAYS'){
                input message: 'This needs approval to deploy to docker-prod', submitter: 'admin'
        }
      }
    }
    stage('Deploy to docker-prod') {
      steps {
        sshagent(['jenkins']) {
          sh 'ssh -o StrictHostKeyChecking=no ubuntu@35.177.69.247 "ansible-playbook docker-prod.yml" '
        }
      }
    }
  }
}